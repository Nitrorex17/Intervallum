'use client'

import React, { useState, useEffect, useRef } from 'react'
import { useRouter } from 'next/navigation'

interface CursorActivatedButtonProps {
    cursorPosition: { x: number; y: number }
    onActivate: () => void
    children: React.ReactNode
}

const CursorActivatedButton: React.FC<CursorActivatedButtonProps> = ({ cursorPosition, onActivate, children }) => {
    const [isOver, setIsOver] = useState(false)
    const buttonRef = useRef<HTMLButtonElement>(null)
    const router = useRouter()

    useEffect(() => {
        const checkIsOver = () => {
            if (buttonRef.current) {
                const buttonRect = buttonRef.current.getBoundingClientRect()
                setIsOver(
                cursorPosition.x >= buttonRect.left &&
                cursorPosition.x <= buttonRect.right &&
                cursorPosition.y >= buttonRect.top &&
                cursorPosition.y <= buttonRect.bottom
                )
            }
        }

        checkIsOver()
    }, [cursorPosition])

    useEffect(() => {
        const handleKeyDown = (event: KeyboardEvent) => {
            if (event.key === 'Enter' && isOver) {
                onActivate()
            }
        }

        window.addEventListener('keydown', handleKeyDown)
        return () => window.removeEventListener('keydown', handleKeyDown)
    }, [isOver, onActivate])

    return (
        <button
        ref={buttonRef}
        className={`px-4 py-2 rounded ${isOver ? 'bg-blue-500' : 'bg-gray-300'} transition-colors duration-200`}
        >
        {children}
        </button>
    )
}

export default CursorActivatedButton